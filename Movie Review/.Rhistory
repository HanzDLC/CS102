Stars5 <- c()
counter <- 0
for (m in 1:12) {
url5 <- paste0(movieURLs[5], '_ajax?&paginationKey=', paginationKeys5[m], sep = "")
session <- bow(url5,
user_agent = "Educational")
parentNode5 <- scrape(session) %>%
html_elements('.review-container')
currentTitles5 <- parentNode5 %>%
html_node('a.title') %>%
html_text()
currentUsers5 <- parentNode5 %>%
html_node('.display-name-link') %>%
html_text()
currentDates5 <- parentNode5 %>%
html_node('.review-date') %>%
html_text()
currentContents5 <- parentNode5 %>%
html_node('.text.show-more__control') %>%
html_text()
currentStars5 <- parentNode5 %>%
html_node('.ipl-ratings-bar') %>%
html_text()
# Append data to vectors
Title5 <- c(Title5, currentTitles5)
User5 <- c(User5, currentUsers5)
Date5 <- c(Date5, currentDates5)
Content5 <- c(Content5, currentContents5)
Stars5 <- c(Stars5, currentStars5)
# Update counter
counter <- counter + length(currentTitles5)
# Check if limit is reached for this movie
if (counter == limit) {
break
}
}
Sys.sleep(2) # System pauses for 2 seconds to avoid overloading the server
# Create dataframe
movieReviewData5 <- data.frame(
Movie_Title = rep(movieTitles[5], length(counter)),
Title = Title5,
User = User5,
Date = Date5,
Content = Content5,
Stars = Stars5
)
paginationKeys6 <- c("g4w6ddbmqyzdo6ic4oxwjnrurxrmmcb33uptz6ppaha7uvl5pjt6ubc7omyf5nbjb4dx25u4kmibb6lzyrbxowthfx36e",
"g4w6ddbmqyzdo6ic4oxwjnzvrdt4ucbs34mdt6hkape7stttfjrkic22oe4vlnjyodng46i3ql5usnfmhr7o3xntjjsa",
"g4w6ddbmqyzdo6ic4oxwjnbyqps4waz73motz6heate7uu35pjt6ubc7oi2vzpzpb4dq2eyefrco4k6u7h4f52dyc7oqm",
"g4w6ddbmqyzdo6ic4oxwjnbxrds4ybb63aodr4heaxb7qwt5pjt6ubc7oi3vrmjdb4dyitqv5tlmmcwergjsrwxzkbyms",
"g4w6ddbmqyzdo6ic4oxwjnbsrls4ucby2ipdd4peapbp4vd5pjt6ubc7oizf7nrdb4du6f2cshcjhsgfkg43ssuuztfdy",
"g4w6ddbmqyzdo6ic4oxwjnbrr7qm6ar63mkt36xma7d7yvl5pjt6ubc5oiyfjmbmb4dzh3otb3kii7dk7t6gxvee5ixgq",
"g4w6ddbmqyzdo6ic4oxwjnjyrdsmmcb53uod37pnaxcpsv3coq366sssou3ftnjddj4k5qyfmlzbaebdknu4brpz5qffkli",
"g4w6ddbmqyzdo6ic4oxwjnjzrpumsaj32ikdb7xiapd7gul5pjt6ubc5oizf7nzob4dxs6f2mmh4r7pqximn45byuzbg4",
"g4w6ddbmqyzdo6ic4oxwjnjxrttmsbz43qndr6pea7epqulcoq366sssoqzfrnrid54k43s2fig6bj5dft2lubeod3mxjyy",
"g4w6ddbmqyzdo6ic4oxwjnjurdtmyar73untt6xja7d7gw35pjt6ubc7oi4fvpzmb4d5xaezv4mkvzg2tkpbbpbf74yvo",
"g4w6ddbmqyzdo6ic4oxwjnjsqpumwajs2iktd77pb7c7wvlfoq366sssoyyfvmrkcr4k45qogdf6njslr5sjyr7fpw2gbza",
"g4w6ddbmqyzdo6ic4oxwjnjtr3umycjz3ikt34hja3apuudfoq366sssou3vrmjpdj4k5u2d7tnd3yvg5zam37mcxrysiyi")
Title6 <- c()
User6 <- c()
Date6 <- c()
Content6 <- c()
Stars6 <- c()
counter <- 0
for (n in 1:12) {
url6 <- paste0(movieURLs[6], '_ajax?&paginationKey=', paginationKeys6[n], sep = "")
session <- bow(url6,
user_agent = "Educational")
parentNode6 <- scrape(session) %>%
html_elements('.review-container')
currentTitles6 <- parentNode6 %>%
html_node('a.title') %>%
html_text()
currentUsers6 <- parentNode6 %>%
html_node('.display-name-link') %>%
html_text()
currentDates6 <- parentNode6 %>%
html_node('.review-date') %>%
html_text()
currentContents6 <- parentNode6 %>%
html_node('.text.show-more__control') %>%
html_text()
currentStars6 <- parentNode6 %>%
html_node('.ipl-ratings-bar') %>%
html_text()
# Append data to vectors
Title6 <- c(Title6, currentTitles6)
User6 <- c(User6, currentUsers6)
Date6 <- c(Date6, currentDates6)
Content6 <- c(Content6, currentContents6)
Stars6 <- c(Stars6, currentStars6)
# Update counter
counter <- counter + length(currentTitles6)
# Check if limit is reached for this movie
if (counter == limit) {
break
}
}
Sys.sleep(2) # System pauses for 2 seconds to avoid overloading the server
# Create dataframe
movieReviewData6 <- data.frame(
Movie_Title = rep(movieTitles[6], length(counter)),
Title = Title6,
User = User6,
Date = Date6,
Content = Content6,
Stars = Stars6
)
paginationKeys7 <- c("g4xojermtizcsyqf7gvhtobwrxqmwbr43emtv7pqcwb32w3dnaqkscssmjofpp4cgdiq3wfgbdvqxhbf4g4ug",
"g4u6dermtizcsyih7cth5nbwrdqm2br73qkddzh6iwdpguldnqr2ibcjdvm2byhckixd2t52ogisvrlfnmma",
"g4v6jermtizcsyia72vhrmbuqpr4wcbs3umtxzh6iwdpgudcnark2d2jdwwfo7kjr6ag6eputbuxmcjgzynq",
"g4w6ddbsqyxdo6ih7ovx7mzxqpqm4ab53eot56pjdpj3qflinis2icc6omrta25a6i6ouhy4vbghebmkog7u6xa",
"g4w6hcjsqyxdo6ih72uhrmbrr7t4ybzz3emdr6pidpj3qflinisk2c27ourtb6lcvt3e7iivvvatdc33ng5vc6i",
"g4w6jdbsqyxdo6ig62vhxobzrlum6abs3amdv77fdpj3qfliniskudc6oqrtae6awz3nqo5pum5nbxfih6vruka",
"g4w6ncbsqyxdo6if7wwhfmrurds4ybr33end77xkdpj3qflinmsk6bkypertaovafz4r6jgnpgust2gyylr2fba",
"g4w6rbjsqyxdo6ig7gtxrmzqrxsm6cj63and36hiaho6qebgmet26dc5oq4u7w5fr4y65un62mospoehnml2cnp3",
"g4xohcbsqyxdo6ig7kvxhobrrts4mbbs2iptt7xedpj3qflinuw24ds5oqrtaq2acgifvjfbivkcr6gsmxj46zq",
"g4xolbjsqyxdo6if76wx5nzrrhtmuaj73mktz7xfdpj3qflinysk4cs2oertank5itlyjbxpmk7y34bfxfzj6fa",
"g4xoncbsqyxdo6ig72vhtnzwrtqm6cb63mmtb7pedpj3qflinuq2ydk5o4rta66qykkonzl7ect4cf2uioc7iey",
"g4xorbjsqyxdo6ig7wvhznjxrpu4uajz3aotv6hldpj3qfliniq22cc2oirtajoahcgmfcowwzodyw6vn5hdnsq",
"g4x6hcbsqyxdo6ig72xhrmbtrlq4obj23ikd57xfdpj3qfliniqkqcssoirtayic5dbx6ncnaqzckk4pczuqldq")
Title7 <- c()
User7 <- c()
Date7 <- c()
Content7 <- c()
Stars7 <- c()
counter <- 0
for (n in 1:13) {
url7 <- paste0(movieURLs[7], '_ajax?&paginationKey=', paginationKeys7[n], sep = "")
session <- bow(url7,
user_agent = "Educational")
parentNode7 <- scrape(session) %>%
html_elements('.review-container')
currentTitles7 <- parentNode7 %>%
html_node('a.title') %>%
html_text()
currentUsers7 <- parentNode7 %>%
html_node('.display-name-link') %>%
html_text()
currentDates7 <- parentNode7 %>%
html_node('.review-date') %>%
html_text()
currentContents7 <- parentNode7 %>%
html_node('.text.show-more__control') %>%
html_text()
currentStars7 <- parentNode7 %>%
html_node('.ipl-ratings-bar') %>%
html_text()
# Append data to vectors
Title7 <- c(Title7, currentTitles7)
User7 <- c(User7, currentUsers7)
Date7 <- c(Date7, currentDates7)
Content7 <- c(Content7, currentContents7)
Stars7 <- c(Stars7, currentStars7)
# Update counter
counter <- counter + length(currentTitles7)
# Check if limit is reached for this movie
if (counter == limit) {
break
}
}
Sys.sleep(2) # System pauses for 2 seconds to avoid overloading the server
# Create dataframe
movieReviewData7 <- data.frame(
Movie_Title = rep(movieTitles[7], length(counter)),
Title = Title7,
User = User7,
Date = Date7,
Content = Content7,
Stars = Stars7
)
movieReviewData7 <- movieReviewData7[-c(301:324), ]
paginationKeys8 <- c("g4w6ddbmqyzdo6ic4oxwjnzrqls42ary3qptd6xeb7epyvl5pjt6ubc6ou3fjnjpb4dvgqbexogkf4rjpk3trcjoshhfo",
"g4w6ddbmqyzdo6ic4oxwjnbrrlr4scbt3undb6plapbpeul5pjt6ubc5oezfxnjkb4dq7tfkjwws76v6rm5godbe6g3qm",
"g4w6ddbmqyzdo6ic4oxwjnjxrxq42bjy3imtx6hna3bp2vd5pjt6ubc5oa3fjmjkb4dzbyysuih76vwmrygw6cppqwxqk",
"g4w6ddbmqyzdo6ic4oxwjnjqrhs4ocjy3mpt56pealc76vd5pjt6ubc6ou4ftmrib4dsuqzpujnjs23qreprdgnpfgw2u",
"g4w6ddbmqyzdo6ic4oxwjmrwrdt4ubjs3modb77ja7ap6vd5pjt6ubc6oy3vtmjpb4d5weeumotyuo4fnw2ftvfufyody",
"g4w6ddbmqyzdo6ic4oxwjmrtqlr44cjz3aptz6hnatepgvdeoq366sssou3f5mzdd54k553hxw2dtnkl6db5e7itqdi62ey",
"g4w6ddbmqyzdo6ic4oxwjmzyqlt4yaz52iotd4pnaxcpyvl5pjt6ubc6pe4vrmjmb4dyzyzwayeueea5jucur7psdjrlg",
"g4w6ddbmqyzdo6ic4oxwjmzzrlrm6cjz3akdx7hla3a7su35pjt6ubc6ou4vxmrnb4d6it2n2ph7krnn7rfj4woa4m34q",
"g4w6ddbmqyzdo6ic4oxwjmzxqpq4mbz334ndz6pnahb72w35pjt6ubc6o43fzmrdb4dxdi7pzyzvry5rm5dcygpde2vpe",
"g4w6ddbmqyzdo6ic4oxwjmzurtu4sbz434mdr4hka7c7yv35pjt6ubc6pa2frmbdb4dwqvq4pdkprhz2gvwiyyd5gwxte",
"g4w6ddbmqyzdo6ic4oxwjmzvrdsmqbzz2mntb7pjb3bpsutioq366sssoyyvzpzlcr4k55eju3euzqdnpgjxjebygdwsxpq",
"g4w6ddbmqyzdo6ic4oxwjmztrts42ars3imtd6pka7apqw3joq366sssou4fjmbmdv4k4mrrzm6vqxekmh6xqooze2yumiy")
Title8 <- c()
User8 <- c()
Date8 <- c()
Content8 <- c()
Stars8 <- c()
counter <- 0
for (o in 1:12) {
url8 <- paste0(movieURLs[8], '_ajax?&paginationKey=', paginationKeys8[o], sep = "")
session <- bow(url8,
user_agent = "Educational")
parentNode8 <- scrape(session) %>%
html_elements('.review-container')
currentTitles8 <- parentNode8 %>%
html_node('a.title') %>%
html_text()
currentUsers8 <- parentNode8 %>%
html_node('.display-name-link') %>%
html_text()
currentDates8 <- parentNode8 %>%
html_node('.review-date') %>%
html_text()
currentContents8 <- parentNode8 %>%
html_node('.text.show-more__control') %>%
html_text()
currentStars8 <- parentNode8 %>%
html_node('.ipl-ratings-bar') %>%
html_text()
# Append data to vectors
Title8 <- c(Title8, currentTitles8)
User8 <- c(User8, currentUsers8)
Date8 <- c(Date8, currentDates8)
Content8 <- c(Content8, currentContents8)
Stars8 <- c(Stars8, currentStars8)
# Update counter
counter <- counter + length(currentTitles8)
# Check if limit is reached for this movie
if (counter == limit) {
break
}
}
Sys.sleep(2) # System pauses for 2 seconds to avoid overloading the server
# Create dataframe
movieReviewData8 <- data.frame(
Movie_Title = rep(movieTitles[8], length(counter)),
Title = Title8,
User = User8,
Date = Date8,
Content = Content8,
Stars = Stars8
)
paginationKeys9 <- c("g4w6ddbmqyzdo6ic4oxwjnrzrts42cjt3end377ea7cpqud5pjt6ucs7o42f7prkb4d7z676yw6vhzldg2uvsqqzoexhy",
"g4w6ddbmqyzdo6ic4oxwjnrwrlumybzs3ektv4pmahdpevl5pjt6ucssom3fzmjdb4dylufa6w3j4zdimqf4lxaiv5hmg",
"g4w6ddbmqyzdo6ic4oxwjnrxrxrmqars3andd6pfa3ep4tttfjrkuds6pazflmryodrmas7krxsfsmicpk2xcusdgc4q",
"g4w6ddbmqyzdo6ic4oxwjnrxr7tmyazy3iptd7hlapb7sv35pjt6ucsype4f7nbmb4du7hhd4ovvzb7staspfwn2w4p4k",
"g4w6ddbmqyzdo6ic4oxwjnrxrdt4scb43mot34hoaxdpwul5pjt6ucsyou4v7nbkb4dxu63cntgfcwsfyd7vfd2o3xjew",
"g4w6ddbmqyzdo6ic4oxwjnruqpq42bzy3emtt77mb7e72wt5pjt6ucsyou3fxmjib4dzp2qryulx5jwo6klmooyvqrtzg",
"g4w6ddbmqyzdo6ic4oxwjnrurdrmobjz3ukd56peadcpytttfjrkuds5oi3fxnzyoc6kzqo3zamq4guyuluj6ap2ypra",
"g4w6ddbmqyzdo6ic4oxwjnrvr7t4sbj23yptt4pjb3dp6v35pjt6ucsypa3fjnjib4dxaoen2opsdntkxio7l5yvb4oyq",
"g4w6ddbmqyzdo6ic4oxwjnrsrxumobr23qot577kadd7yvt5pjt6ucsypeyvvnzmb4d3zq4eyfec4tcrwdadzdqbgolvq",
"g4w6ddbmqyzdo6ic4oxwjnrtqlqmobrs3andv7hoatepqvl5pjt6ucsyou3vrnbjb4du5wpnljrrr2q6jnwul5qpqp7ta",
"g4w6ddbmqyzdo6ic4oxwjnrqqpqmsaj23mpdv6hkahep6vt5pjt6ucsyoq4fxprcb4d4mpylxviflwkkiblw5iykpsgl4",
"g4w6ddbmqyzdo6ic4oxwjnrqr3smmbb73ipt36xnada76wt5pjt6ucsyouzf7nzpb4d4mlrue5ijufw77abw5m6nylhgy")
Title9 <- c()
User9 <- c()
Date9 <- c()
Content9 <- c()
Stars9 <- c()
counter <- 0
for (p in 1:12) {
url9 <- paste0(movieURLs[9], '_ajax?&paginationKey=', paginationKeys9[p], sep = "")
session <- bow(url9,
user_agent = "Educational")
parentNode9 <- scrape(session) %>%
html_elements('.review-container')
currentTitles9 <- parentNode9 %>%
html_node('a.title') %>%
html_text()
currentUsers9 <- parentNode9 %>%
html_node('.display-name-link') %>%
html_text()
currentDates9 <- parentNode9 %>%
html_node('.review-date') %>%
html_text()
currentContents9 <- parentNode9 %>%
html_node('.text.show-more__control') %>%
html_text()
currentStars9 <- parentNode9 %>%
html_node('.ipl-ratings-bar') %>%
html_text()
# Append data to vectors
Title9 <- c(Title9, currentTitles9)
User9 <- c(User9, currentUsers9)
Date9 <- c(Date9, currentDates9)
Content9 <- c(Content9, currentContents9)
Stars9 <- c(Stars9, currentStars9)
# Update counter
counter <- counter + length(currentTitles9)
# Check if limit is reached for this movie
if (counter == limit) {
break
}
}
Sys.sleep(2) # System pauses for 2 seconds to avoid overloading the server
# Create dataframe
movieReviewData9 <- data.frame(
Movie_Title = rep(movieTitles[9], length(counter)),
Title = Title9,
User = User9,
Date = Date9,
Content = Content9,
Stars = Stars9
)
paginationKeys10 <- c("g4w6ddbmqyzdo6ic4oxwjnrtqpr44ab63ektv6xkb7e7qu35pjt6uckso4zfvprkb4d7sv2ytnkr7c6qk2cgpyixwbyns",
"g4w6ddbmqyzdo6ic4oxwjnzxrdu4sbb72indr4hia7d7stttfjrkudc3ou4fxpzyoaon5koxbduivj55jxyn6qkfckpq",
"g4w6ddbmqyzdo6ic4oxwjnzvrprm4azs2ikt577na7bpwud5pjt6uckso42ftnbkb4dtrqero5vtmm3hla2i3x75wt7xs",
"g4w6ddbmqyzdo6ic4oxwjnztrls4yajz34kdd6pkaxap6v35pjt6ucc3pa2fznjob4d3vfydkzgtnnv4kmsqq4iqqosro",
"g4w6ddbmqyzdo6ic4oxwjnzrqlqmocby3imd74hpapbpqvd5pjt6uc25oezvrmbib4d3qeb3jljsmdywqfl3aq3qygw42",
"g4w6ddbmqyzdo6ic4oxwjnbyrtumucjs3yndb4heahc7eu35pjt6uckspa3f5nblb4duylc3pcgwilrkbnl3o4oej6ega",
"g4w6ddbmqyzdo6ic4oxwjnbzqlt4qbrt3aot54hkaxa72tttfjrkqdktoq2fvpryocomvtnhetinpxuedseo3q2govka",
"g4w6ddbmqyzdo6ic4oxwjnbzr3r44br73mnd74hiapbpsw35pjt6uc24oazvrmjdb4dzs42kjmrbo7tv56thvaksbg2qg",
"g4w6ddbmqyzdo6ic4oxwjnbzrls4sar73upd56pmb7cpwvt5pjt6ucc5oy2frmjmb4d3fuuc3c42sobolajaipqwgai2m",
"g4w6ddbmqyzdo6ic4oxwjnbwrtsmwabz2mntr7hkb3d7uu35pjt6ucs7oezvjmbjb4dqpylyggvmndoa5onddrlxj45vw",
"g4w6ddbmqyzdo6ic4oxwjnbwrpqm6cjz2imdd7xpapdpeu35pjt6uc2toa2f7pzkb4d37zmddbc5uhw5dmnn3f57mpcgo",
"g4w6ddbmqyzdo6ic4oxwjnbxr7rmocjs3iptv6pjb3d7ww35pjt6uc25ou4f7mrmb4dzzjcqie3wilvovrx4ybh34h5ne",
"g4w6ddbmqyzdo6ic4oxwjnbxrlsmqbz33amtb7xoa7bpsv35pjt6uckso44vlpzkb4dre4kvbsh2qjp62ypeyez6jp5li")
Title10 <- c()
User10 <- c()
Date10 <- c()
Content10 <- c()
Stars10 <- c()
counter <- 0
for (q in 1:13) {
url10 <- paste0(movieURLs[10], '_ajax?&paginationKey=', paginationKeys10[q], sep = "")
session <- bow(url10,
user_agent = "Educational")
parentNode10 <- scrape(session) %>%
html_elements('.review-container')
currentTitles10 <- parentNode10 %>%
html_node('a.title') %>%
html_text()
currentUsers10 <- parentNode10 %>%
html_node('.display-name-link') %>%
html_text()
currentDates10 <- parentNode10 %>%
html_node('.review-date') %>%
html_text()
currentContents10 <- parentNode10 %>%
html_node('.text.show-more__control') %>%
html_text()
currentStars10 <- parentNode10 %>%
html_node('.ipl-ratings-bar') %>%
html_text()
# Append data to vectors
Title10 <- c(Title10, currentTitles10)
User10 <- c(User10, currentUsers10)
Date10 <- c(Date10, currentDates10)
Content10 <- c(Content10, currentContents10)
Stars10 <- c(Stars10, currentStars10)
# Update counter
counter <- counter + length(currentTitles10)
# Check if limit is reached for this movie
if (counter == limit) {
break
}
}
Sys.sleep(2) # System pauses for 2 seconds to avoid overloading the server
# Create dataframe
movieReviewData10 <- data.frame(
Movie_Title = rep(movieTitles[10], length(counter)),
Title = Title10,
User = User10,
Date = Date10,
Content = Content10,
Stars = Stars10
)
movieReviewData10 <- movieReviewData10[-c(301:323), ]
View(movieReviewData1)
View(movieReviewData10)
View(movieReviewData2)
View(movieReviewData10)
View(movieReviewData3)
View(movieReviewData4)
View(movieReviewData5)
allData <- rbind(movieReviewData1,movieReviewData2, movieReviewData3, movieReviewData3,movieReviewData4,movieReviewData5,movieReviewData6,movieReviewData7,movieReviewData8,movieReviewData9,movieReviewData10)
allData <- rbind(movieReviewData1,movieReviewData2, movieReviewData3,movieReviewData4,movieReviewData5,movieReviewData6,movieReviewData7,movieReviewData8,movieReviewData9,movieReviewData10)
View(allData)
library(dplyr)
library(stringr)
library(httr)
library(rvest)
url <- 'https://arxiv.org/search/?query=%22text+mining%22&searchtype=all&source=header&start=0'
parse_url(url)
start <- proc.time()
title <- NULL
author <- NULL
subject <- NULL
abstract <- NULL
meta <- NULL
pages <- seq(from = 0, to = 10, by = 10)
for( i in pages){
tmp_url <- modify_url(url, query = list(start = i))
tmp_list <- read_html(tmp_url) %>%
html_nodes('p.list-title.is-inline-block') %>%
html_nodes('a[href^="https://arxiv.org/abs"]') %>%
html_attr('href')
for( i in pages){
tmp_url <- modify_url(url, query = list(start = i))
tmp_list <- read_html(tmp_url) %>%
html_nodes('p.list-title.is-inline-block') %>%
html_nodes('a[href^="https://arxiv.org/abs"]') %>%
html_attr('href')
for(j in 1:length(tmp_list)){
tmp_paragraph <- read_html(tmp_list[j])
# title
tmp_title <- tmp_paragraph %>% html_nodes('h1.title.mathjax') %>% html_text(T)
tmp_title <-  gsub('Title:', '', tmp_title)
title <- c(title, tmp_title)
# author
tmp_author <- tmp_paragraph %>% html_nodes('div.authors') %>% html_text
tmp_author <- gsub('\\s+',' ',tmp_author)
tmp_author <- gsub('Authors:','',tmp_author) %>% str_trim
author <- c(author, tmp_author)
# subject
tmp_subject <- tmp_paragraph %>% html_nodes('span.primary-subject') %>% html_text(T)
subject <- c(subject, tmp_subject)
# abstract
tmp_abstract <- tmp_paragraph %>% html_nodes('blockquote.abstract.mathjax') %>% html_text(T)
tmp_abstract <- gsub('\\s+',' ',tmp_abstract)
tmp_abstract <- sub('Abstract:','',tmp_abstract) %>% str_trim
abstract <- c(abstract, tmp_abstract)
# meta
tmp_meta <- tmp_paragraph %>% html_nodes('div.submission-history') %>% html_text
tmp_meta <- lapply(strsplit(gsub('\\s+', ' ',tmp_meta), '[v1]', fixed = T),'[',2) %>% unlist %>% str_trim
meta <- c(meta, tmp_meta)
cat(j, "paper\n")
Sys.sleep(1)
}
cat((i/50) + 1,'/ 9 page\n')
}
library(readr)
library(dplyr)
library(lubridate)
#import the csv file into an objcet
Movies3000DF <- read.csv('MovieReviews.csv')
#change the format of the date column to date
Movies3000DF$Date <- dmy(Movies3000DF$Date)
#checking for the data type of date
class(Movies3000DF$Date)
#converting the star rating from character to
as.character(Movies3000DF)
Movies3000DF$Stars <- gsub("/10", "",Movies3000DF$Stars)
View(Movies3000DF)
Remove <- grepl("\\s+|\n", Movies3000DF$Stars)
Movies3000DF$Stars <- gsub("\\s+|\n", "", Movies3000DF$Stars)
Movies3000DF$Stars <- as.numeric(Movies3000DF$Stars)
library(readr)
library(dplyr)
library(lubridate)
#import the csv file into an objcet
Movies3000DF <- read.csv('MovieReviews.csv')
#change the format of the date column to date
Movies3000DF$Date <- dmy(Movies3000DF$Date)
#change the format of the date column to date
Movies3000DF$Date <- dmy(Movies3000DF$Date)
#import the csv file into an objcet
Movies3000DF <- read.csv('MovieReviews.csv')
setwd("C:/Users/KuchiChai/Desktop/New folder/Movie Review")
library(readr)
library(dplyr)
library(lubridate)
#import the csv file into an objcet
Movies3000DF <- read.csv('MovieReviews.csv')
#change the format of the date column to date
Movies3000DF$Date <- dmy(Movies3000DF$Date)
#checking for the data type of date
class(Movies3000DF$Date)
#converting the star rating from character to
as.character(Movies3000DF)
Movies3000DF$Stars <- gsub("/10", "",Movies3000DF$Stars)
View(Movies3000DF)
Remove <- grepl("\\s+|\n", Movies3000DF$Stars)
Movies3000DF$Stars <- gsub("\\s+|\n", "", Movies3000DF$Stars)
Movies3000DF$Stars <- as.numeric(Movies3000DF$Stars)
View(Movies3000DF)
Movies3000DF$Movie_Title <- tolower(Movies3000DF$Movie_Title)
Movies3000DF$Title <- tolower(Movies3000DF$Title)
Movies3000DF$User <- tolower(Movies3000DF$User)
Movies3000DF$Content <- tolower(Movies3000DF$Content)
View(Movies3000DF)
class(Movies3000DF$X)
install.packages("stringr")
library(stringr)
Movies3000DF$Content <-  str_remove_all(Movies3000DF$Content, "[\\U0001F600-\\U0001F64F]")
Movies3000DF$Title <- str_remove_all(Movies3000DF$Title, "[\\U0001F600-\\U0001F64F]")
Movies3000DF$Title <- str_remove_all(Movies3000DF$Title, "[\\U0001F600-\\U0001F64F]")
Movies3000DF$User <- str_remove_all(Movies3000DF$User, "[\\U0001F600-\\U0001F64F]")
View(Movies3000DF)
write.csv(Movies3000DF,file ="Movie3000_DataCleaning.csv")
Movies3000DF$Stars <- gsub("\\s+|\n", "", Movies3000DF$Stars)
library(readr)
library(dplyr)
library(lubridate)
library(stringr)
#import the csv file into an objcet
Movies3000DF <- read.csv('MovieReviews.csv')
#change the format of the date column to date
Movies3000DF$Date <- dmy(Movies3000DF$Date)
#checking for the data type of date
class(Movies3000DF$Date)
#converting the star rating from character to
as.character(Movies3000DF)
Movies3000DF$Stars <- gsub("/10", "",Movies3000DF$Stars)
View(Movies3000DF)
#remove the white spaces and \n in the stars column
Remove <- grepl("\\s+|\n", Movies3000DF$Stars)
Movies3000DF$Stars <- gsub("\\s+|\n", "", Movies3000DF$Stars)
#convert the stars column into a numeric data type
Movies3000DF$Stars <- as.numeric(Movies3000DF$Stars)
#lowercase the columns
Movies3000DF$Movie_Title <- tolower(Movies3000DF$Movie_Title)
Movies3000DF$Title <- tolower(Movies3000DF$Title)
Movies3000DF$User <- tolower(Movies3000DF$User)
Movies3000DF$Content <- tolower(Movies3000DF$Content)
#remove emoticons using stringr package
Movies3000DF$Content <-  str_remove_all(Movies3000DF$Content, "[\\U0001F600-\\U0001F64F]")
Movies3000DF$Title <- str_remove_all(Movies3000DF$Title, "[\\U0001F600-\\U0001F64F]")
Movies3000DF$User <- str_remove_all(Movies3000DF$User, "[\\U0001F600-\\U0001F64F]")
write.csv(Movies3000DF,file ="Movie3000_DataCleaning.csv")
